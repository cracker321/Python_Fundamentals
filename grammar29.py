# [ 다양한 출력포맷 ]

# < 빈 자리는 빈 공간으로 두고, 오른쪽 정렬을 하되, 총 10자리 공간 확보 >

# '>': 오른쪽 정렬(출력되는 내용을 오른쪽으로 몰아가는 것)
# '> 뒤의 숫자': 공백 공간의 폭(왼쪽 정렬이면, 출력문자열 오른쪽 공간의 폭. 오른쪽 정렬이면, 출력문자열의 왼쪽 공간의 폭)
# ': 뒤에 한 칸 띄어쓰는 것': 공백 공간을 그냥 빈 공백으로 계속 유지시킨다는 뜻
print("{0: >10}{1:>30}".format(500, 200)) 


# < 양수일 때는 '+'로 표시, 음수일 때는 '-'로 표시하고 싶을 때: '> 뒤의 숫자'에 '+'를 붙이기 >
print("{0: >+10} ,{1: >+25}".format(-400, 800))


# < 왼쪽 정렬 후, 빈칸을 '_'로 채우기: ':' 뒤에 밑줄(_) 붙이기 >
print("{0:_<20}{1:_<30}".format(40, 50))


# < 큰 숫자를 사용할 때, 세 자리마다 콤마를 찍어주기: ':' 뒤에 '0' 붙이기 >
print("{0:,}".format(5000000000))


# < 세 자리마다 콤마를 찍어주고, + - 부호도 붙이기 >
print("{0:+,}".format(-100000000))


# < 세 자리마다 콤마를 찍어주고, + - 부호도 붙이고, 왼쪽 정렬 후 오른쪽 공백 자릿수도 확보하고, 빈 자리에는 '^'를 입력하기 >
print("{0:^<+40,}".format(11111111)) 


# < 소수점 출력: 콜론(:) 뒤에 f 붙이기 >
print("{0:f}".format(5/3))


# < 소수점 특정 자릿수까지만 출력하기: 소수점 n자리수까지만 (n+1 자리에서 반올림하여) 표시하고자 할 떄, 'f'앞에 '온점(.)' + '해당하는 n의 값' 입력하기  >
print("{0:.2f}".format(5/3)) 

