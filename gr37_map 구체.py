

'''
< 대전제 >


(1) input 함수
사용자로부터 입력을 받을 수 있는 함수이며, 사용자가 입력한 것을 '문자열' 타입으로 반환해주는 함수

(2) split 함수
split() 함수는 '문자열'을 '공백 등 특정 구분자를 기준'으로 나눈 후에 '리스트 변환하여 반환'해주는 함수임!
즉, split() ---> '문자열'을 '구분자 기분으로 분리'하여 '리스트'로 반환.

(3) int 함수
'문자열' 또는 '실수'를 '정수형'으로 변환시켜 반환해주는 함수.

'''


'''

< 요약 >


(1) 변수 2개일 경우

1) str을 입력받으면

A, B = input().split() 을 사용하는 되고,


2) int를 입력받으면

A, B = map(int, input().split()) 또는
A, B = list(map(int, input().split())) 사용하면 된다




(2) 변수 1개인 경우,

1) str을 입력받으면

A = input().split() 을 사용하면 되고,


2) int를 입력받으면,

A = list(map, int(input().split())) 사용하면 된다.



==================================================================================================================



[ 변수 2개에 할당하는 경우 ]


(1) 문자열 str을 입력받을 때    

1) A, B = input().split() ---> O     



(2) 정수 int를 입력받을 때

1) A, B = int(input().split()) ---> X     
2) A, B = map(int, input().split()) ---> O     
3) A, B = list(map(int, input().split()) ---> O     

: 2) 과 3) 의 결괏값은 정확히 동일하기 때문에 그냥 2) 사용하면 됨.


==================================================================================================================


[ 변수 1개에 할당하는 경우 ]


(1) 문자열 str을 입력받을 때 

1) A = input().split() ---> O     
2) A = map(str, input().split()) ---> X     
3) A = list(map(str, input().split()) ---> O   

: 1) 과 3) 의 결괏값은 정확히 동일하기 때문에 그냥 1) 사용하면 됨.



(2) 정수 int를 입력받을 때

1) A = int(input().split()) ---> X     
2) A = map(int, input().split()) ---> X     
3) A = list(map(int, inptu().split())) ---> O  




'''


# ==============================================================================================================

'''
[ 변수 2개에 할당하는 경우 ]


< 요약 >

- 3번과 4번의 결과는 동일하다. 
  그 작동 과정과 완전 거의 똑같다.
  그냥, 2번의 결과(어차피 리스트임)에 다시 새로운 리스트를 덮어씌우는 것임. 따라서 결과 동일함.
  
   
   
(1) 문자열 str을 입력받을 때    

1) A, B = input().split() ---> O     




(2) 정수 int를 입력받을 때

1) A, B = int(input().split()) ---> X     
2) A, B = map(int, input().split()) ---> O     
3) A, B = list(map(int, input().split()) ---> O     
 
: 2) 과 3) 의 결괏값은 정확히 동일하기 때문에 그냥 2) 사용하면 됨.
 
  
  
1. < '문자열 str'을 입력받을 때 사용 >
A, B = input().split() 

- 한 줄에 두 '문자열 형태인 숫자'를 입력받아 각각 변수 A와 변수 B에 할당함.
- split()이 입력값을 '리스트'로 변환시켜 주는 것이 맞으나, 그렇게 변환된 [ 'Hello', 'World' ]를 다시 쪼개어
  변수 A와 변수 B에 할당하므로, 변수 A와 변수 B 각각은 이제 더 이상 '리스트가 아닌 문자열 그 자체'가 되게 된다.
- e.g) 입력값: Hello World
       결괏값:
       A = 'Hello' (즉, 리스트가 아닌 문자열임)
       B = 'World' (즉, 리스트가 아닌 문자열임)





2. < '숫자 int'를 입력받을 때 사용 >
A, B = int(input().split())

결괏값: 에러

- split()은 입력된 문자열을 '리스트'로 반환해주는데, int()함수는 '리스트'를 '정수형'으로 변환시킬 수 없음. 
  이건 변수의 개수가 1개인지, 2개인지, 3개인지에 무관하게 동일함.
- int()와 split()을 같이 사용하려면, 무조건 map()을 일단 같이 넣어줘야 한다!!
- 변수가 1개라면 list(map(int, input().split()))) 이고, 
- 변수가 2개 이상이라면 list(map(int, input().split())) 또는 
                       map(int, input().split()) 이렇게 둘 중 하나 선택해서 해주면 된다!






3. < '숫자 int'를 입력받을 때 사용 >
A, B = map(int, input().split())

- e.g) 입력값: 25 50
       결괏값: 
       A = 25 (즉, 리스트가 아닌 정수 int임)
       B = 50 (즉, 리스트가 아닌 정수 int임)

- input() 함수는 사용자로부터 입력을 받는 함수입니다. 여기서 사용자는 두 개의 정수를 공백으로 구분하여 입력해야 합니다.
  split() 함수는 입력된 값을 공백을 기준으로 나누어 리스트로 반환합니다. 예를 들어, 사용자가 "10 20"을 입력했다면, 
  split() 함수는 ['10', '20']이라는 리스트를 반환합니다.
  map(int, ...) 함수는 리스트의 각 요소를 정수로 변환하는 함수입니다. 위의 예제에서는 ['10', '20']을 [10, 20]으로 변환합니다.
  A, B = ... 부분은 변환된 값 [10, 20]을 각각 A와 B에 할당하는 부분입니다. 따라서 A에는 10이, B에는 20이 할당됩니다.
  
  **중요!!!!
  - 변수 A, 변수 B 이렇게 변수 1개 'A = map(...)', 'B = map(...)'이런 형식이 아니라,
  변수 A, B 'A, B = map(...)' 이렇게 변수 2개로 할당했을 때는, 
  map(int, input().split()) 이 결괏값으로 '<map object at 0x0000021741C1A530>'와 같은 문제 없이 정상적으로 작동하는 이유는, 
  반환된 'map' 객체의 값이 자동적으로 언패킹되어 변수 A와 B에 순서대로 할당됨. 각각의 변수에는 정수 값이 저장됨.





4. < '숫자 int'를 입력받을 때 사용 >
A, B = list(map(int, input().split()))

- e.g) 입력값: 25 50
       결괏값: 
       A = 25 (즉, 리스트가 아닌 정수 int임)
       B = 50 (즉, 리스트가 아닌 정수 int임)
       
- input() 함수는 사용자로부터 입력을 받아 그 입력을 '문자열' 타입으로 반환해주는 함수입니다.  
  여기서도 사용자는 두 개의 정수를 공백으로 구분하여 입력해야 합니다.
  split() 함수는 입력된 값을 공백을 기준으로 나누어 리스트로 반환합니다. 예를 들어, 사용자가 "10 20"을 입력했다면, 
  split() 함수는 ['10', '20']이라는 리스트를 반환합니다.
  map(int, ...) 함수는 리스트의 각 요소를 정수로 변환하는 함수입니다. 위의 예제에서는 ['10', '20']을 [10, 20]으로 변환합니다.
  list(...) 함수는 변환된 값 [10, 20]을 리스트로 변환합니다. 즉, [10, 20]은 그대로 유지됩니다.
  A, B = ... 부분은 변환된 리스트 [10, 20]을 각각 A와 B에 할당하는 부분입니다. 따라서 A에는 10이, B에는 20이 할당됩니다.

'''


# ==============================================================================================================

'''
[ 변수 1개에만 할당하는 경우 ]
 
  
(1) 문자열 str을 입력받을 때 

1) A = input().split() ---> O     
2) A = map(str, input().split()) ---> X     
3) A = list(map(str, input().split()) ---> O   

: 1) 과 3) 의 결괏값은 정확히 동일하기 때문에 그냥 1) 사용하면 됨.



(2) 정수 int를 입력받을 때

1) A = int(input().split()) ---> X     
2) A = map(int, input().split()) ---> X     
3) A = list(map(int, inptu().split())) ---> O     
  
  
  
  
  
1. < '문자열 str'을 입력받을 때 사용 >. 아주아주 중요!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
A = input().split() 

- 한 줄에 두 '문자열 형태인 숫자'를 입력받아 각각 변수 A와 변수 B에 할당함.
- split()이 입력값을 '리스트'로 변환시켜 주기 때문에, 그렇게 변환된 [ 'Hello', 'World', 'Brother' ]이 되고, 이것을 온전히 
  변수 A에만 할당하므로, 변수 A는 '문자열이 아닌 리스트 그 자체'가 된다!
- e.g) 입력값: Hello World Brother
       출력값: [ 'Hello', 'World', 'Brother' ]
    




2. < '숫자 int'를 입력받을 때 사용 >
A = map(int, input().split())

결괏값: <map object at 0x0000021741C1A530>


- input() 함수는 사용자로부터 입력을 받는 함수입니다. 여기서 사용자는 두 개의 정수를 공백으로 구분하여 입력해야 합니다.
  split() 함수는 입력된 값을 공백을 기준으로 나누어 리스트로 반환합니다. 예를 들어, 사용자가 "10 20"을 입력했다면, 
  split() 함수는 ['10', '20']이라는 리스트를 반환합니다.
  map(int, ...) 함수는 리스트의 각 요소를 정수로 변환하는 함수입니다. 위의 예제에서는 ['10', '20']을 [10, 20]으로 변환합니다.
  
- 'map()함수를 사용하는 이유'
  : '(입력되는) 여러 개의 데이터'를 '한 번에 다른 형태로 변환시키고자 할 때' 사용한다.
    따라서, 여러 개의 데이터를 담고 있는 '리스트'나 '튜플'을 대상으로 주로 사용함.

- **중요!!!! '할당되는 변수가 1개일 때', 'list'로 감싸줘야 되는 것이다!
  그런데, 여기서 끝나게 되면, 결괏값(출력값)은 '<map object at 0x0000021741C1A530>' 이런 형식으로 나옴.
  즉, 출력값은 '리스트'가 아닌 '맵 객체' 형태임. 
  (cf: 'map 객체'는 map()함수의 결과로 생성되며, 각 원소에 대한 연산을 지연적으로 수행할 수 있는 iterable 객체임.)
- 따라서, 이것을 '리스트 형태'로 출력하고 있다면, map()함수의 결과를 list() 함수로 감싸주면 된다.

- ******** 즉, A = list(map(int, input().split())) 으로 만들어줘야 한다!  ********

- e.g) 입력값: 53 234 132 535 64
       list()로 감싸주지 않았을 때의 출력값: map object at 0x0000021741C1A530
       list()로 감싸주었을 때의 출력값(=리스트 형식): [ 53, 234, 132, 535, 64 ]
       
- 변수 A, 변수 B 이렇게 변수 1개가 아닌 '변수 2개로 할당했을 때'는, 
  map(int, input().split()) 이 결괏값으로 '<map object at 0x0000021741C1A530>'와 같은 문제 없이 작동하는 이유는, 
  반환된 'map' 객체의 값이 자동적으로 언패킹되어 변수 A와 B에 순서대로 할당됨. 각각의 변수에는 정수 값이 저장됨.





2-1. < '정수형 변환시키는 int 함수'를 사용할 때, 'split()'을 사용할 수 없는 이유 >
M = int(sys.stdin.readline().strip()) 
- 여기서 split()을 사용할 수 없는 이유는(사용하면 TypeError 발생), split()은 '입력된 문자열'을 '리스트'로 반환하는데,
  int함수는 '리스트'를 '정수형'으로 바꿔줄 수가 없기 때문이다.
  따라서, 그냥 애초에 split()을 사용하지 않고, 입력된 문자열을 바로 그냥 정수형 int로 변환시키는 거다!
  https://ccamppak.tistory.com/38 참조
- 만약, '변수 1개'인 상태에서 split()을 사용하고 싶다면, 반드시 'M = list(map(int, input().split()))' 이렇게 사용해야 함.





3. < '정수 str'을 입력받을 때 사용 >
- 요약: 
e.g) 입력값: 조유종 하하 유재석 메롱 안녕 
1) C = map(str, input().split())  --> 결괏값: map object at 0x0000021741C1A530 와 같은 것.
2) C = list(map(str, input().split()))  --> 결괏값: [ '조유종', '하하', '유재석', '메롱', '안녕' ]
3) C = input().split() --> 결괏값: [ '조유종', '하하', '유재석', '메롱', '안녕' ]

---> '정수 str 입력할 때'는 굳이 'map()' 객체를 사용하지 않아도 
자연스럽게 3)에서의 split()이 그 입력값을 '문자열'로 자동으로 변환시켜준다!



4. < 번외 int 함수 >

# 변수 1개에 할당하는 경우
4) C = int(input().split()) --> 결괏값: 타입에러(TypeError). 
                                split()은 입력된 문자열을 '리스트'로 반환해주는데, 
                                int()함수는 '리스트'를 '정수형'으로 변환시킬 수 없음.
5) C = map(int, input().split()) --> 결괏값: map object at 0x0000021741C1A530 와 같은 것.
6) C = list(map(int, input().split())) --> 결괏값: 정상출력
        
        
   
# 변수 2개 이상에 할당하는 경우    
7) C, D = int(input().split()) --> 결괏값: 타입에러(TypeError).
                                   split()은 입력된 문자열을 '리스트'로 반환해주는데, 
                                   int()함수는 '리스트'를 '정수형'으로 변환시킬 수 없음.
8) C, D = map(int, input().split()) --> 결괏값: 정상출력
9) C, D = list(map(int, input().split())) --> 결괏값: 정상출력. 6)과 결괏값 동일함.





- 결론 1: 
즉, 2)와 3)은 동일하기 때문에, '정수 str 입력할 때'는 굳이 'map()' 객체를 사용하지 않아도 
자연스럽게 3)에서의 split()이 그 입력값을 '문자열'로 자동으로 변환시켜준다!

- 결론 2:
int()함수와 split()함수를 같이 사용하려면, 무조건 무조건 
변수 1개인 경우: list(map(int, input().split()))
변수 2개인 경우: map(int, input().split()) 또는 list(map(int, input().split())) 로 해야 한다!

'''
# ==============================================================================================================

'''
< 요약 >
- 2번과 3번의 결과는 동일하다. 
  그 작동 과정과 완전 거의 똑같다.
  그냥, 2번의 결과(어차피 리스트임)에 다시 새로운 리스트를 덮어씌우는 것임. 따라서 결과 동일함.

1.
A, B = sys.stdin.readline().split()


2. 
A, B = map(int, sys.stdin.readline().split())


3.
A, B = list(map(int, sys.stdin.readline().split()))




'''

# ==========================================================================================================
