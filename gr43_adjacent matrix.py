'''
- 아래와 같이 서로 연결되어 있는 노드들의 '그래프'가 있음.
       1  
     /   \
    2  ㅡ  3
    
- 이를 '인접리스트'로 표현하면 아래와 같음 

graph = [
    [], # 0번 노드는 없으므로 비워둠
    [2, 3] # 1번 노드와 인접한 노드는 2번, 3번 노드임.
    [1, 3] # 2번 노드와 인접한 노드는 1번, 3번 노드임.
    [1, 2] # 3번 노드와 인접한 노드는 1번, 2번 노드임.
]   

- 인접리스트를 초기화할 때는, 빈 리스트를 미리 생성해두고, 그래프의 노드 개수 만큼 빈 리스트를
  추가하는 방법을 사용함. 
  파이썬에서는 리스트 컴프리헨션을 사용하여 다음과 같이 작성할 수 있음.
    
  1. 
  n = 3 # 노드의 개수
  graph = [[] for _ in range(n+1)] # 'n+1'개의 빈 리스트를 생성하고, 이를 '변수 graph'에 할당함.
  # 여기까지의 출력값: [[], [], [], []]
  ('언더바 _'는, 예를 들어, 원래는 언더바 자리에 원래 들어가 있을 변수 i가 실행문에서 print(i) 등으로 사용될 때도 있지만,
    위에처럼 그 변수 i가 실행문에서 사용되지 않는다면, 그 변수를 없애고 그냥 '언더바'로 대체해줘도 가능하다.)
  
  2. 
  이렇게 초기화된 인접리스트에 '간선을 추가'하려면, 다음과 같은 코드를 사용한다.
  graph[1].append(2)
  graph[1].append(3)
  graph[2].append(1)
  graph[2].append(3)
  graph[3].append(1)
  graph[3].append(2)
'''
n = 3
graph = [[] for _ in range(n+1)]

print(graph)