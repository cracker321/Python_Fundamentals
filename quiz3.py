# 당신은 Cocoa 서비스를 이용하는 택시 기사님입니다.
# 50명의 승객과 매칭 기회가 있을 때, 총 탑승 승객 수를 구하는 프로그램을 작성하시오.

# 조건1: 승객별 운행 소요 시간은 5분 ~ 50분 사이의 난수로 정해집니다.
# 조건2: 당신은 소요 시간 5분 ~ 15분 사이의 승객만 매칭해야 합니다.

# (출력문 예제)
# [O] 1번째 손님 (소요시간 : 15분)
# [ ] 2번째 손님 (소요시간 : 50분)
# [O] 3번째 손님 (소요시간 : 5분)
# ...
# [ ] 50번째 손님 (소요시간 : 16분)

# 총 탑승 승객 : 2분


import random

total_passenger = 0 # 총 탑승 승객 수

# for i in range(1, 51)






# 첫 번째 방법은 기본적인 for 반복문과 조건문을 이용하여 문제를 해결한 방법입니다.

# 먼저, random 모듈의 randint 함수를 이용하여 각 승객의 소요시간을 랜덤하게 생성하였습니다. 생성된 값들은 리스트 passengers에 저장됩니다.

# 그 다음, for 반복문을 이용하여 각 승객의 소요시간을 하나씩 확인합니다. 소요시간이 5분 이상 15분 이하인 경우 [O]으로 표시하고, 그렇지 않은 경우 [ ]로 표시합니다. 이때, 현재 승객의 번호도 함께 출력합니다. 소요시간과 승객번호는 f-string을 이용하여 문자열로 변환하고, 출력은 print 함수를 이용합니다.

# 마지막으로, 매칭된 승객의 수를 카운트하여 출력합니다. 이때 매칭된 승객의 수는 if 문을 이용하여 소요시간이 5분 이상 15분 이하인 경우에만 1씩 증가합니다.

# 아래는 코드 전체입니다.

# python
# Copy code
# import random

# passengers = []  # 승객들의 소요시간 리스트 초기화
# for i in range(1, 51):
#     passengers.append(random.randint(5, 50))  # 승객들의 소요시간 랜덤 생성

# total_passenger = 0  # 매칭된 승객의 수 초기화
# for i in range(len(passengers)):
#     time = passengers[i]  # i번째 승객의 소요시간
#     if 5 <= time <= 15:  # 소요시간이 5분 이상 15분 이하인 경우
#         print(f"[O] {i+1}번째 손님 (소요시간 : {time}분)")
#         total_passenger += 1  # 매칭된 승객의 수 1 증가
#     else:  # 소요시간이 5분 미만 또는 15분 초과인 경우
#         print(f"[ ] {i+1}번째 손님 (소요시간 : {time}분)")

# print(f"총 탑승 승객 : {total_passenger}분")














